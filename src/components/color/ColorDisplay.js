import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Box, Grid, Typography } from "@mui/material";
import { brand, error, grayDarkMode, grayLightMode, success, warning, } from "../../theme/colors";
const ColorDisplay = () => {
    return (_jsxs(Box, { children: [_jsx(Typography, { children: "grayLightMode" }), _jsx(Grid, { container: true, spacing: 1, children: Object.entries(grayLightMode).map(([key, color]) => (_jsxs(Grid, { item: true, xs: 1, children: [_jsx(Box, { width: "100%", height: 100, bgcolor: color }), _jsxs(Typography, { children: [key, " : ", color] })] }))) }), _jsx(Typography, { children: "grayDarkMode" }), _jsx(Grid, { container: true, spacing: 1, children: Object.entries(grayDarkMode).map(([key, color]) => (_jsxs(Grid, { item: true, xs: 1, children: [_jsx(Box, { width: "100%", height: 100, bgcolor: color }), _jsxs(Typography, { children: [key, " : ", color] })] }))) }), _jsx(Typography, { children: "brand" }), _jsx(Grid, { container: true, spacing: 1, children: Object.entries(brand).map(([key, color]) => (_jsxs(Grid, { item: true, xs: 1, children: [_jsx(Box, { width: "100%", height: 100, bgcolor: color }), _jsxs(Typography, { children: [key, " : ", color] })] }))) }), _jsx(Typography, { children: "error" }), _jsx(Grid, { container: true, spacing: 1, children: Object.entries(error).map(([key, color]) => (_jsxs(Grid, { item: true, xs: 1, children: [_jsx(Box, { width: "100%", height: 100, bgcolor: color }), _jsxs(Typography, { children: [key, " : ", color] })] }))) }), _jsx(Typography, { children: "success" }), _jsx(Grid, { container: true, spacing: 1, children: Object.entries(success).map(([key, color]) => (_jsxs(Grid, { item: true, xs: 1, children: [_jsx(Box, { width: "100%", height: 100, bgcolor: color }), _jsxs(Typography, { children: [key, " : ", color] })] }))) }), _jsx(Typography, { children: "warning" }), _jsx(Grid, { container: true, spacing: 1, children: Object.entries(warning).map(([key, color]) => (_jsxs(Grid, { item: true, xs: 1, children: [_jsx(Box, { width: "100%", height: 100, bgcolor: color }), _jsxs(Typography, { children: [key, " : ", color] })] }))) })] }));
};
export default ColorDisplay;
